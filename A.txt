compilei neste site

https://www.onlinegdb.com/online_c_compiler

#include<stdio.h>

struct noArv {
    int info;
    struct noArv *esq;
    struct noArv *dir;
};

typedef struct noArv NoArv;

NoArv *arvore_cria(void)
{
    return NULL;
}

void arvore_imprime(NoArv *a)
{
    if (a != NULL) {
        printf("( ");    
        arvore_imprime(a->esq);
        printf(", %d , ", a->info);
        arvore_imprime(a->dir);
        printf(") ");    
    }
    else printf("( )");    
}

NoArv *arvore_insere(NoArv *a, int v)
{
    if (a==NULL) {
        a = (NoArv*)malloc(sizeof(NoArv));
        a->info = v;
        a->esq = NULL;
        a->dir = NULL;
    }
    else    if (v < a->info){
                a->esq = arvore_insere(a->esq,v);
            }
            else a->dir = arvore_insere(a->dir,v);
    return a;
}

NoArv *arvore_remover (NoArv *a, int v)
{
    NoArv *t, *f;    
   
    if (a == NULL){
        printf("elemento %d nao encontrado!", v);
        return NULL;
    }    
    else {  if (a->info > v){
                a->esq = arvore_remover(a->esq, v);
            }
            else {  if (a->info < v){
                        a->dir = arvore_remover(a->dir, v);
                    }
                    else {  if (a->esq == NULL && a->dir == NULL) {
                                free(a);
                                a = NULL;
                            }
                            else {  if (a->esq == NULL) {
                                        t = a;
                                        a = a->dir;
                                        free(t);
                                    }
                                    else {  if (a->dir == NULL) {
                                                t = a;
                                                a = a->esq;
                                                free(t);
                                            }
                                            else {  f = a->esq;
                                                    while (f->dir != NULL) {
                                                        f = f->dir;
                                                    }
                                                    a->info = f->info;
                                                    f->info = v;
                                                    a->esq = arvore_remover(a->esq,v);
                                                 }
                                         }
                                 }
                         }
                 }
         }
        return a;
}

void sair()
{
    printf("Ja vai??? Nao! Nao! Espere! Naa...\n");
}